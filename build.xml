<?xml version="1.0"?>
<project name="GlobalPlatform Java" default="dist" basedir=".">
  <description>ANT build file for OpenKMS GlobalPlatform</description>
  <!-- Build the software -->
  <target name="compile" description="compile the source">
    <mkdir dir="build"/>
    <javac srcdir="src" destdir="build" includeantruntime="false" excludes="**/tests/**" source="1.6" target="1.6" debug="true" debuglevel="lines,vars,source">
      <compilerarg value="-Xlint"/>
      <classpath>
        <pathelement location="lib/jnasmartcardio.jar"/>
        <pathelement location="lib/bcprov-jdk15on-150.jar"/>
      </classpath>
    </javac>
  </target>
  <!-- Package it into a nice little JAR -->
  <target name="dist" depends="compile" description="generate the distribution">
    <java classname="proguard.ProGuard" fork="true" failonerror="true">
      <arg line="@globalplatform.pro"/>
      <classpath>
        <pathelement location="ext/proguard.jar"/>
      </classpath>
    </java>
    <jar manifest="Manifest.mf" destfile="gp.jar" level="9">
      <zipfileset src="lib/jnasmartcardio.jar"/>
      <zipfileset src="optimized-globalplatform.jar" excludes="META-INF/BCKEY.*,org/bouncycastle/x509/"/>
    </jar>
    <delete file="optimized-globalplatform.jar"/>
  </target>
  <!-- Clean the source tree -->
  <target name="clean" description="clean up">
    <delete dir="build"/>
    <delete dir="javadoc"/>
    <delete file="gp.jar"/>
  </target>
  <!-- Put javadocs online -->
  <target name="javadoc">
    <javadoc destdir="javadoc" Doctitle="GlobalPlatform Java" access="public" linksource="true">
      <packageset dir="src">
        <include name="openkms/gpj/"/>
        <exclude name="openkms/gpj/tests/**"/>
      </packageset>
      <classpath>
        <pathelement location="lib/jnasmartcardio.jar"/>
        <pathelement location="lib/bcprov-jdk15on-150.jar"/>
      </classpath>
    </javadoc>
  </target>
  <!-- Do a full release to github -->
  <target name="release" depends="clean,dist,javadoc">
    <exec failonerror="true" command="test -n &quot;$(git status -s)&quot;"/>
    <input message="Publish version:" addproperty="release.version"/>
    <input message="Do you want to release ${release.version}?" validargs="y,n" addproperty="do.release"/>
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.release}"/>
    </condition>
    <fail if="do.abort">Not releasing ${release.version}.</fail>
    <echo message="Releasing ${release.version} to Github"/>
    <exec failonerror="true" command="git tag -s ${release.version} -m 'Release ${release.version}'"/>
    <exec failonerror="true" command="git push --tags origin master"/>
    <exec failonerror="true" command="ghp-import -n -m 'Release ${release.version}' -p javadoc"/>
  </target>
</project>
